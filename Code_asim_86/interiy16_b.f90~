!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.4 (r3342) - 27 Jan 2010 15:25
!
!  Differentiation of interiy16 in reverse (adjoint) mode:
!   gradient     of useful results: ty
!   with respect to varying inputs: uy
!
!********************************************************************
!
SUBROUTINE INTERIY16_B(ty, tyb, uy, uyb, cifi6y, cisi6y, ciwi6y, nx, nym&
&  , ny, nz, npaire)
!-----------------------------------------------
!   M o d u l e s 
!-----------------------------------------------
  USE interpoly6_m 
  USE paramy_m 
  implicit none
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
  INTEGER :: nx, nxm, ny, nym, nz, npaire
  REAL*8, DIMENSION(nx, nz, ny) :: ty
  REAL*8, DIMENSION(nx, nz, ny) :: tyb
  REAL*8, DIMENSION(nx, nz, nym) :: uy
  REAL*8, DIMENSION(nx, nz, nym) :: uyb
  REAL*8, DIMENSION(ny) :: cifi6y, cisi6y, ciwi6y
!
  INTEGER :: i, j, k
!
  IF (npaire .EQ. 1) THEN
    DO j=1,ny-1,1
      DO k=nz,1,-1
        DO i=nx,1,-1
          tyb(i, k, j+1) = tyb(i, k, j+1) - ciwi6y(j)*cifi6y(j)*tyb(i, k&
&            , j)
          tyb(i, k, j) = ciwi6y(j)*tyb(i, k, j)
        END DO
      END DO
    END DO
    DO k=nz,1,-1
      DO i=nx,1,-1
        tyb(i, k, ny) = ciwi6y(ny)*tyb(i, k, ny)
      END DO
    END DO
    DO j=ny,2,-1
      DO k=nz,1,-1
        DO i=nx,1,-1
          tyb(i, k, j-1) = tyb(i, k, j-1) - cisi6y(j)*tyb(i, k, j)
        END DO
      END DO
    END DO
    uyb = 0.0_8
    DO k=nz,1,-1
      DO i=nx,1,-1
        uyb(i, k, ny-1) = uyb(i, k, ny-1) + aiciy6*2*tyb(i, k, ny)
        uyb(i, k, ny-2) = uyb(i, k, ny-2) + biciy6*2*tyb(i, k, ny)
        tyb(i, k, ny) = 0.0_8
        uyb(i, k, ny-1) = uyb(i, k, ny-1) + (biciy6+aiciy6)*tyb(i, k, ny&
&          -1)
        uyb(i, k, ny-2) = uyb(i, k, ny-2) + aiciy6*tyb(i, k, ny-1)
        uyb(i, k, ny-3) = uyb(i, k, ny-3) + biciy6*tyb(i, k, ny-1)
        tyb(i, k, ny-1) = 0.0_8
      END DO
    END DO
    DO j=ny-2,3,-1
      DO k=nz,1,-1
        DO i=nx,1,-1
          uyb(i, k, j) = uyb(i, k, j) + aiciy6*tyb(i, k, j)
          uyb(i, k, j-1) = uyb(i, k, j-1) + aiciy6*tyb(i, k, j)
          uyb(i, k, j+1) = uyb(i, k, j+1) + biciy6*tyb(i, k, j)
          uyb(i, k, j-2) = uyb(i, k, j-2) + biciy6*tyb(i, k, j)
          tyb(i, k, j) = 0.0_8
        END DO
      END DO
    END DO
    DO k=nz,1,-1
      DO i=nx,1,-1
        uyb(i, k, 2) = uyb(i, k, 2) + aiciy6*tyb(i, k, 2)
        uyb(i, k, 1) = uyb(i, k, 1) + (biciy6+aiciy6)*tyb(i, k, 2)
        uyb(i, k, 3) = uyb(i, k, 3) + biciy6*tyb(i, k, 2)
        tyb(i, k, 2) = 0.0_8
        uyb(i, k, 1) = uyb(i, k, 1) + aiciy6*2*tyb(i, k, 1)
        uyb(i, k, 2) = uyb(i, k, 2) + biciy6*2*tyb(i, k, 1)
        tyb(i, k, 1) = 0.0_8
      END DO
    END DO
  ELSE
    uyb = 0.0_8
  END IF
END SUBROUTINE INTERIY16_B
