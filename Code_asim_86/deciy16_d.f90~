!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.4 (r3342) - 27 Jan 2010 15:25
!
!  Differentiation of deciy16 in forward (tangent) mode:
!   variations   of useful results: ty
!   with respect to varying inputs: uy
!
!********************************************************************
!
SUBROUTINE DECIY16_D(ty, tyd, uy, uyd, cfi6y, csi6y, cwi6y, nx, nym, ny&
&  , nz, npaire)
!-----------------------------------------------
!   M o d u l e s 
!-----------------------------------------------
  USE dericey6_m 
  USE paramy_m 
  implicit none
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
  INTEGER :: nx, ny, nym, nz, npaire
  REAL*8, DIMENSION(nx, nz, ny) :: ty
  REAL*8, DIMENSION(nx, nz, ny) :: tyd
  REAL*8, DIMENSION(nx, nz, nym) :: uy
  REAL*8, DIMENSION(nx, nz, nym) :: uyd
  REAL*8, DIMENSION(ny) :: cfi6y, csi6y, cwi6y
!
  INTEGER :: i, j, k
  REAL :: bciy6
  REAL :: aciy6
!
  IF (npaire .EQ. 1) THEN
    tyd = 0.0_8
    DO k=1,nz
      DO i=1,nx
        tyd(i, k, 1) = 0.0_8
        ty(i, k, 1) = 0.
        tyd(i, k, 2) = aciy6*(uyd(i, k, 2)-uyd(i, k, 1)) + bciy6*(uyd(i&
&          , k, 3)-uyd(i, k, 1))
        ty(i, k, 2) = aciy6*(uy(i, k, 2)-uy(i, k, 1)) + bciy6*(uy(i, k, &
&          3)-uy(i, k, 1))
      END DO
    END DO
    DO j=3,ny-2
      DO k=1,nz
        DO i=1,nx
          tyd(i, k, j) = aciy6*(uyd(i, k, j)-uyd(i, k, j-1)) + bciy6*(&
&            uyd(i, k, j+1)-uyd(i, k, j-2))
          ty(i, k, j) = aciy6*(uy(i, k, j)-uy(i, k, j-1)) + bciy6*(uy(i&
&            , k, j+1)-uy(i, k, j-2))
        END DO
      END DO
    END DO
    DO k=1,nz
      DO i=1,nx
        tyd(i, k, ny-1) = aciy6*(uyd(i, k, ny-1)-uyd(i, k, ny-2)) + &
&          bciy6*(uyd(i, k, ny-1)-uyd(i, k, ny-3))
        ty(i, k, ny-1) = aciy6*(uy(i, k, ny-1)-uy(i, k, ny-2)) + bciy6*(&
&          uy(i, k, ny-1)-uy(i, k, ny-3))
        tyd(i, k, ny) = 0.0_8
        ty(i, k, ny) = 0.
      END DO
    END DO
    DO j=2,ny
      DO k=1,nz
        DO i=1,nx
          tyd(i, k, j) = tyd(i, k, j) - csi6y(j)*tyd(i, k, j-1)
          ty(i, k, j) = ty(i, k, j) - ty(i, k, j-1)*csi6y(j)
        END DO
      END DO
    END DO
    DO k=1,nz
      DO i=1,nx
        tyd(i, k, ny) = cwi6y(ny)*tyd(i, k, ny)
        ty(i, k, ny) = ty(i, k, ny)*cwi6y(ny)
      END DO
    END DO
    DO j=ny-1,1,-1
      DO k=1,nz
        DO i=1,nx
          tyd(i, k, j) = cwi6y(j)*(tyd(i, k, j)-cfi6y(j)*tyd(i, k, j+1))
          ty(i, k, j) = (ty(i, k, j)-cfi6y(j)*ty(i, k, j+1))*cwi6y(j)
        END DO
      END DO
    END DO
  ELSE
    tyd = 0.0_8
  END IF
!
  RETURN
END SUBROUTINE DECIY16_D
