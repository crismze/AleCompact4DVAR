!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.4 (r3342) - 27 Jan 2010 15:25
!
!  Differentiation of banbks1 in reverse (adjoint) mode:
!   gradient     of useful results: x b
!   with respect to varying inputs: x b
!*******************************************************
!*******************************************************
!
SUBROUTINE BANBKS1_B(a, n, m, m1, m2, al, indx, b, bb, x, xb)
!
  implicit none
!
  INTEGER :: n, m1, m2, l, mm, m, i, k, j
!
  REAL*8, DIMENSION(n/2, m1) :: al
  REAL*8, DIMENSION(n/2, m1 + m2 + 1) :: a
  REAL*8, DIMENSION(n/2) :: indx
  REAL*8, DIMENSION(n/2) :: b, x
  REAL*8, DIMENSION(n/2) :: bb, xb
  INTEGER, DIMENSION(n/2) :: lv, lu
  REAL*8 :: piv1, piv2
  REAL*8 :: piv1b, piv2b
  REAL*8 :: tmp
  REAL*8 :: tmp0
  REAL*8 :: tmpb
  REAL*8 :: tmp0b
!      
  mm = m1 + m2 + 1
!
  l = m1
  DO k=1,n/2
    IF (l .LT. n/2) l = l + 1
    lv(k) = l
  END DO
!
  l = 1
  DO i=n/2,1,-1
    lu(i) = l
    IF (l .LT. mm) l = l + 1
  END DO
!
  DO i=1,n/2,1
    xb(i) = xb(i)/a(i, 1)
    DO k=lu(i),2,-1
      tmp0b = xb(i)
      xb(i) = tmp0b
      xb(k+i-1) = xb(k+i-1) - a(i, k)*tmp0b
    END DO
  END DO
!
  DO k=n/2,1,-1
    DO i=lv(k),k+1,-1
      tmpb = xb(i)
      xb(i) = tmpb
      xb(k) = xb(k) - al(k, i-k)*tmpb
    END DO
    j = indx(k)
    piv2b = xb(j)
    xb(j) = 0.0_8
    piv1b = xb(k)
    xb(k) = (j-k)*piv2b
    xb(j) = xb(j) + (j-k)*piv1b + (k-j+1)*piv2b
    xb(k) = xb(k) + (k-j+1)*piv1b
  END DO
!
  DO i=n/2,1,-1
    bb(i) = bb(i) + xb(i)
    xb(i) = 0.0_8
  END DO
!
END SUBROUTINE BANBKS1_B
