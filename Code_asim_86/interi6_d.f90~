!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.4 (r3342) - 27 Jan 2010 15:25
!
!  Differentiation of interi6 in forward (tangent) mode:
!   variations   of useful results: tx
!   with respect to varying inputs: ux
!
!********************************************************************
!
SUBROUTINE INTERI6_D(tx, txd, ux, uxd, cifi6, cisi6, ciwi6, nxm, nx, ny&
&  , nz, npaire)
!-----------------------------------------------
!   M o d u l e s 
!-----------------------------------------------
  USE paramx_m 
  USE interpol6_m 
  implicit none
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
  INTEGER :: nx, nxm, ny, nym, nz, npaire
  REAL*8, DIMENSION(nx, ny, nz) :: tx
  REAL*8, DIMENSION(nx, ny, nz) :: txd
  REAL*8, DIMENSION(nxm, ny, nz) :: ux
  REAL*8, DIMENSION(nxm, ny, nz) :: uxd
  REAL*8, DIMENSION(nx) :: cifi6, cisi6, ciwi6
!
  INTEGER :: i, j, k
  REAL :: bicix6
  REAL :: aicix6
!
  IF (npaire .EQ. 1) THEN
    txd = 0.0_8
    DO k=1,nz
      DO j=1,ny
        txd(1, j, k) = aicix6*2*uxd(1, j, k) + bicix6*2*uxd(2, j, k)
        tx(1, j, k) = aicix6*(ux(1, j, k)+ux(1, j, k)) + bicix6*(ux(2, j&
&          , k)+ux(2, j, k))
        txd(2, j, k) = aicix6*(uxd(2, j, k)+uxd(1, j, k)) + bicix6*(uxd(&
&          3, j, k)+uxd(1, j, k))
        tx(2, j, k) = aicix6*(ux(2, j, k)+ux(1, j, k)) + bicix6*(ux(3, j&
&          , k)+ux(1, j, k))
      END DO
    END DO
    DO i=3,nx-2
      DO k=1,nz
        DO j=1,ny
          txd(i, j, k) = aicix6*(uxd(i, j, k)+uxd(i-1, j, k)) + bicix6*(&
&            uxd(i+1, j, k)+uxd(i-2, j, k))
          tx(i, j, k) = aicix6*(ux(i, j, k)+ux(i-1, j, k)) + bicix6*(ux(&
&            i+1, j, k)+ux(i-2, j, k))
        END DO
      END DO
    END DO
    DO k=1,nz
      DO j=1,ny
        txd(nx-1, j, k) = aicix6*(uxd(nx-1, j, k)+uxd(nx-2, j, k)) + &
&          bicix6*(uxd(nx-1, j, k)+uxd(nx-3, j, k))
        tx(nx-1, j, k) = aicix6*(ux(nx-1, j, k)+ux(nx-2, j, k)) + bicix6&
&          *(ux(nx-1, j, k)+ux(nx-3, j, k))
        txd(nx, j, k) = aicix6*2*uxd(nx-1, j, k) + bicix6*2*uxd(nx-2, j&
&          , k)
        tx(nx, j, k) = aicix6*(ux(nx-1, j, k)+ux(nx-1, j, k)) + bicix6*(&
&          ux(nx-2, j, k)+ux(nx-2, j, k))
      END DO
    END DO
    DO i=2,nx
      DO k=1,nz
        DO j=1,ny
          txd(i, j, k) = txd(i, j, k) - cisi6(i)*txd(i-1, j, k)
          tx(i, j, k) = tx(i, j, k) - tx(i-1, j, k)*cisi6(i)
        END DO
      END DO
    END DO
    DO k=1,nz
      DO j=1,ny
        txd(nx, j, k) = ciwi6(nx)*txd(nx, j, k)
        tx(nx, j, k) = tx(nx, j, k)*ciwi6(nx)
      END DO
    END DO
    DO i=nx-1,1,-1
      DO k=1,nz
        DO j=1,ny
          txd(i, j, k) = ciwi6(i)*(txd(i, j, k)-cifi6(i)*txd(i+1, j, k))
          tx(i, j, k) = (tx(i, j, k)-cifi6(i)*tx(i+1, j, k))*ciwi6(i)
        END DO
      END DO
    END DO
  ELSE
    txd = 0.0_8
  END IF
END SUBROUTINE INTERI6_D
