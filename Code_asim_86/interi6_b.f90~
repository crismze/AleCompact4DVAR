!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.4 (r3342) - 27 Jan 2010 15:25
!
!  Differentiation of interi6 in reverse (adjoint) mode:
!   gradient     of useful results: tx
!   with respect to varying inputs: ux
!
!********************************************************************
!
SUBROUTINE INTERI6_B(tx, txb, ux, uxb, cifi6, cisi6, ciwi6, nxm, nx, ny&
&  , nz, npaire)
!-----------------------------------------------
!   M o d u l e s 
!-----------------------------------------------
  USE paramx_m 
  USE interpol6_m 
  implicit none
!-----------------------------------------------
!   D u m m y   A r g u m e n t s
!-----------------------------------------------
  INTEGER :: nx, nxm, ny, nym, nz, npaire
  REAL*8, DIMENSION(nx, ny, nz) :: tx
  REAL*8, DIMENSION(nx, ny, nz) :: txb
  REAL*8, DIMENSION(nxm, ny, nz) :: ux
  REAL*8, DIMENSION(nxm, ny, nz) :: uxb
  REAL*8, DIMENSION(nx) :: cifi6, cisi6, ciwi6
!
  INTEGER :: i, j, k
!
  IF (npaire .EQ. 1) THEN
    DO i=1,nx-1,1
      DO k=nz,1,-1
        DO j=ny,1,-1
          txb(i+1, j, k) = txb(i+1, j, k) - ciwi6(i)*cifi6(i)*txb(i, j, &
&            k)
          txb(i, j, k) = ciwi6(i)*txb(i, j, k)
        END DO
      END DO
    END DO
    DO k=nz,1,-1
      DO j=ny,1,-1
        txb(nx, j, k) = ciwi6(nx)*txb(nx, j, k)
      END DO
    END DO
    DO i=nx,2,-1
      DO k=nz,1,-1
        DO j=ny,1,-1
          txb(i-1, j, k) = txb(i-1, j, k) - cisi6(i)*txb(i, j, k)
        END DO
      END DO
    END DO
    uxb = 0.0_8
    DO k=nz,1,-1
      DO j=ny,1,-1
        uxb(nx-1, j, k) = uxb(nx-1, j, k) + aicix6*2*txb(nx, j, k)
        uxb(nx-2, j, k) = uxb(nx-2, j, k) + bicix6*2*txb(nx, j, k)
        txb(nx, j, k) = 0.0_8
        uxb(nx-1, j, k) = uxb(nx-1, j, k) + (bicix6+aicix6)*txb(nx-1, j&
&          , k)
        uxb(nx-2, j, k) = uxb(nx-2, j, k) + aicix6*txb(nx-1, j, k)
        uxb(nx-3, j, k) = uxb(nx-3, j, k) + bicix6*txb(nx-1, j, k)
        txb(nx-1, j, k) = 0.0_8
      END DO
    END DO
    DO i=nx-2,3,-1
      DO k=nz,1,-1
        DO j=ny,1,-1
          uxb(i, j, k) = uxb(i, j, k) + aicix6*txb(i, j, k)
          uxb(i-1, j, k) = uxb(i-1, j, k) + aicix6*txb(i, j, k)
          uxb(i+1, j, k) = uxb(i+1, j, k) + bicix6*txb(i, j, k)
          uxb(i-2, j, k) = uxb(i-2, j, k) + bicix6*txb(i, j, k)
          txb(i, j, k) = 0.0_8
        END DO
      END DO
    END DO
    DO k=nz,1,-1
      DO j=ny,1,-1
        uxb(2, j, k) = uxb(2, j, k) + aicix6*txb(2, j, k)
        uxb(1, j, k) = uxb(1, j, k) + (bicix6+aicix6)*txb(2, j, k)
        uxb(3, j, k) = uxb(3, j, k) + bicix6*txb(2, j, k)
        txb(2, j, k) = 0.0_8
        uxb(1, j, k) = uxb(1, j, k) + aicix6*2*txb(1, j, k)
        uxb(2, j, k) = uxb(2, j, k) + bicix6*2*txb(1, j, k)
        txb(1, j, k) = 0.0_8
      END DO
    END DO
  ELSE
    uxb = 0.0_8
  END IF
!
END SUBROUTINE INTERI6_B
