!        Generated by TAPENADE     (INRIA, Tropics team)
!  Tapenade 3.4 (r3342) - 27 Jan 2010 15:25
!
!  Differentiation of funcion3 in forward (tangent) mode:
!   variations   of useful results: ps2d2 ps2d3
!   with respect to varying inputs: ps2d2
!   RW status of diff variables: ps2d2:in-out ps2d3:out
!
!  Entrada: ps2d2, ps2d2d
!  Salida: ps2d3d
! 
!********************************************************************
!
SUBROUTINE FUNCION3_D(ps2d2, ps2d2d, ps2d3d, mx, my, nx, ny, nxm&
&  , nym)
!
  implicit none
!
  INTEGER :: i, j, mx, my, nx, ny, nxm, nym
!
  REAL*8, DIMENSION(mx, my) :: ps2d2, ps2d3
  REAL*8, DIMENSION(mx, my) :: ps2d2d, ps2d3d
  REAL*8, DIMENSION(mx, my) :: ur, ue, ur1, ue1
  REAL*8, DIMENSION(mx, my) :: urd, ued, ur1d, ue1d
  REAL*8 :: xx1, xx2
  REAL*8 :: xx1d, xx2d
  REAL*8 :: pi
  REAL :: result1
  REAL*8 :: arg1
  REAL*8 :: arg2
  INTRINSIC COS
  INTRINSIC SIN
  INTRINSIC ACOS
  INTRINSIC SQRT
!
! ******************* temporellebis16STR ********************
! ************* D^(mx,my) ---> D^d(mx,my) ***************
!
  pi = ACOS(-1.)
!
! Inversa de (CN). Asi recupero la salida de scfft2d corresp. a funcion2
  DO i=3,nxm
    DO j=1,my
      result1 = SQRT(2.)
      ps2d2d(i, j) = ps2d2d(i, j)/result1
      ps2d2(i, j) = 1./result1*ps2d2(i, j)
    END DO
  END DO
  ps2d3d = 0.0_8
!
  DO j=1,my
    DO i=1,mx
      ps2d3d(i, j) = ps2d2d(i, j)
      ps2d3(i, j) = ps2d2(i, j)
    END DO
  END DO
!
  DO j=1,my
    DO i=1,mx
      urd(i, j) = 0.0_8
      ur(i, j) = 0.
      ued(i, j) = 0.0_8
      ue(i, j) = 0.
      ur1d(i, j) = 0.0_8
      ur1(i, j) = 0.
      ue1d(i, j) = 0.0_8
      ue1(i, j) = 0.
    END DO
  END DO
  urd = 0.0_8
!
  DO j=1,nym
    DO i=1,nxm/2
      urd(i, j) = ps2d2d(2*i-1, j)
      ur(i, j) = ps2d2(2*i-1, j)
    END DO
  END DO
!      
  DO j=1,nym
    urd(nxm/2+1, j) = ps2d2d(nxm+1, j)
    ur(nxm/2+1, j) = ps2d2(nxm+1, j)
  END DO
!
  DO j=1,nym
    DO i=2,nxm/2
      urd(i+nxm/2, j) = urd(nxm/2-i+2, j)
      ur(i+nxm/2, j) = ur(nxm/2-i+2, j)
    END DO
  END DO
  ued = 0.0_8
!
  DO j=1,nym
    DO i=1,nxm/2
      ued(i, j) = ps2d2d(2*i, j)
      ue(i, j) = ps2d2(2*i, j)
    END DO
  END DO
!
  DO j=1,nym
    ued(nxm/2+1, j) = ps2d2d(nx+1, j)
    ue(nxm/2+1, j) = ps2d2(nx+1, j)
  END DO
!
  DO j=1,nym
    DO i=2,nxm/2
      ued(i+nxm/2, j) = -ued(nxm/2-i+2, j)
      ue(i+nxm/2, j) = -ue(nxm/2-i+2, j)
    END DO
  END DO
  ur1d = 0.0_8
!
  DO j=1,ny
    DO i=1,nxm/2+1
      arg1 = (j-1)/2.*pi/nym
      arg2 = (j-1)/2.*pi/nym
      xx1d = COS(arg1)*urd(i, j)/2. + SIN(arg2)*ued(i, j)/2.
      xx1 = ur(i, j)*COS(arg1)/2. + ue(i, j)*SIN(arg2)/2.
      arg1 = (j-1)/2.*pi/nym
      arg2 = (j-1)/2.*pi/nym
      xx2d = COS(arg1)*urd(i, nym-j+2)/2. - SIN(arg2)*ued(i, nym-j+2)/2.
      xx2 = ur(i, nym-j+2)*COS(arg1)/2. - ue(i, nym-j+2)*SIN(arg2)/2.
      ur1d(i, j) = xx1d + xx2d
      ur1(i, j) = xx1 + xx2
    END DO
  END DO
!
  DO j=1,ny
    DO i=2,nxm/2
      ur1d(i+nxm/2, j) = ur1d(nxm/2-i+2, j)
      ur1(i+nxm/2, j) = ur1(nxm/2-i+2, j)
    END DO
  END DO
  ue1d = 0.0_8
!
  DO j=1,ny
    DO i=1,nxm/2+1
      arg1 = (j-1)/2.*pi/nym
      arg2 = (j-1)/2.*pi/nym
      xx1d = COS(arg2)*ued(i, j)/2. - SIN(arg1)*urd(i, j)/2.
      xx1 = -(ur(i, j)*SIN(arg1)/2.) + ue(i, j)*COS(arg2)/2.
      arg1 = (j-1)/2.*pi/nym
      arg2 = (j-1)/2.*pi/nym
      xx2d = SIN(arg1)*urd(i, nym-j+2)/2. + COS(arg2)*ued(i, nym-j+2)/2.
      xx2 = ur(i, nym-j+2)*SIN(arg1)/2. + ue(i, nym-j+2)*COS(arg2)/2.
      ue1d(i, j) = xx1d + xx2d
      ue1(i, j) = xx1 + xx2
    END DO
  END DO
!
  DO j=1,ny
    DO i=2,nxm/2
      ue1d(i+nxm/2, j) = -ue1d(nxm/2-i+2, j)
      ue1(i+nxm/2, j) = -ue1(nxm/2-i+2, j)
    END DO
  END DO
!
  DO i=1,nxm
    ur1d(i, 1) = 2.*ur1d(i, 1)
    ur1(i, 1) = ur1(i, 1)*2.
    ue1d(i, 1) = 2.*ue1d(i, 1)
    ue1(i, 1) = ue1(i, 1)*2.
  END DO
!  
  DO j=1,ny
    DO i=1,nxm
      arg1 = (i-1)/2.*pi/nxm
      xx1d = COS(arg1)*(ur1d(i, j)+ur1d(nxm-i+2, j))/2.
      xx1 = (ur1(i, j)+ur1(nxm-i+2, j))*COS(arg1)/2.
      arg1 = (i-1)/2.*pi/nxm
      xx2d = SIN(arg1)*(ue1d(i, j)-ue1d(nxm-i+2, j))/2.
      xx2 = (ue1(i, j)-ue1(nxm-i+2, j))*SIN(arg1)/2.
      ps2d3d(i, j) = xx1d + xx2d
      ps2d3(i, j) = xx1 + xx2
    END DO
  END DO
!
  DO j=1,ny
    ps2d3d(1, j) = 2.*ps2d3d(1, j)
    ps2d3(1, j) = 2.*ps2d3(1, j)
  END DO
!
END SUBROUTINE FUNCION3_D
